int* sortArrayByParityII(int* A, int ASize, int* returnSize){
    int *arr = malloc(ASize * sizeof(int));
    int i = 0;
    int j = 1;
    int k = 0;
    while(k < ASize)
    {
        if(A[k] % 2 == 0){
            arr[i] = A[k];
            i += 2;
        }
        else{
            arr[j] = A[k];
            j += 2;
        }
        k++;
    }
    *returnSize = ASize;
    return arr;
}

int* sortArrayByParityII(int* A, int ASize, int* returnSize)
{
	int i = 0;
	int j = 1;
	int tmp = 0;
	while (i < ASize && j < ASize)
	{
		if (A[i] % 2 == 0 && A[j] % 2 != 0){//奇偶正常顺序,i和j都走两下
			i += 2;
			j += 2;
		}
		else if (A[i] % 2 == 0 && A[j] % 2 == 0){//都为偶数，i往前走两下，j不变
			i += 2;
		}
		else if (A[i] % 2 != 0 && A[j] % 2 != 0){//都为奇数，j往前走两下，i不变
			j += 2;
		}
		else{
			tmp = A[i];
			A[i] = A[j];
			A[j] = tmp;
			i += 2;
			j += 2;
		}
	}
	*returnSize = ASize;
	return A;
}
